**ATIVIDADE 03 - Laboratório**

EXERCÍCIOS DA LISTA 7

3 -)
use std::io;

fn main() {
    let mut entrada = String::new();
    
    println!("Digite um número:");
    io::stdin().read_line(&mut entrada).expect("Erro na leitura!");
    let numero: i32 = entrada.trim().parse().expect("Digite um valor válido!");
    
    println!("Tabuada do número {}", numero);
    for i in 1..=10 {
        println!("{} x {} = {}", numero, i, numero * i);
    }
}

4 -)
use std::io;

fn bubble_sort(vetor: &mut Vec<i32>) {
    let tamanho = vetor.len();

    for i in 0..tamanho {
        for j in 0..tamanho - 1 - i {
            if vetor[j] > vetor[j + 1] {
                vetor.swap(j, j + 1);
            }
        }
    }
}

fn main() {
    println!("Digite três números, com espaço entre eles:");
    let mut entrada = String::new();
    io::stdin().read_line(&mut entrada).expect("Erro na leitura!");

    let mut numeros: Vec<i32> = entrada
        .trim()
        .split_whitespace()
        .map(|x| x.parse().expect("Digite apenas números inteiros"))
        .collect();

    if numeros.len() != 3 {
        println!("Você precisa digitar exatamente três números!");
        return;
    }

    bubble_sort(&mut numeros);

    println!("Números ordenados: {:?}", numeros);
}


5 -)
- Buffer Overflow: erro de estouro de buffer de memória é um erro onde um conjunto de dados acaba por exceder o espaço particionado para armazená-los, podendo causar comportamentos ou falhas inesperadas no programa.

- Use-after-free: erro que ocorre quando um programa tenta acessar ou usar um dado que ja tenha sido desalocado (limpo) da memória

- Acesso a ponteiros nulos ou inválidos: erro que ocorre quando se tenta acessar a memória apontada por um ponteiro que não aponta para nenhum endereço válido (ponteiro nulo)


EXERCÍCIOS DA LISTA 8:

- 2)
# 1. Criando o data frame
praias <- data.frame(
  local = c("Joaquina", "Campeche", "Armação", "Praia Mole"),
  caranguejos = c(42, 34, 59, 18)
)

# 2. Praias com menos de 30 caranguejos
menos_30 <- subset(praias, caranguejos < 30)
print("Praias com menos de 30 caranguejos:")
print(menos_30)

# 3. Adicionando coluna de região
praias$regiao <- ifelse(praias$local %in% c("Joaquina", "Praia Mole"), "leste", "sul")

# 4. Selecionando praias da região leste com menos de 20 caranguejos
leste_menos_20 <- subset(praias, regiao == "leste" & caranguejos < 20)
print("Praias da região leste com menos de 20 caranguejos:")
print(leste_menos_20)

# 5. Qual praia do sul teve mais de 40 caranguejos?
sul_mais_40 <- subset(praias, regiao == "sul" & caranguejos > 40)
print("Praias da região sul com mais de 40 caranguejos:")
print(sul_mais_40)

# 6. Qual região possui praias com mais de 50 caranguejos?
regiao_mais_50 <- subset(praias, caranguejos > 50)
print("Regiões com praias que têm mais de 50 caranguejos:")
print(unique(regiao_mais_50$regiao))


EXERCÍCIO EXTRA (QUE NÃO CONSTA NA LISTA 7 E NA LISTA 8):

RESPOSTA -)
# Carregando a base de dados Titanic

data(Titanic)

# Visualizando a estrutura da base de dados

str(Titanic)

# Visualizando informações sobre a base de dados

# ?Titanic

# Criando um dataframe com os dados da tabela
Titanic_df <- as.data.frame(Titanic)
print(Titanic_df)

# E1 – Imprima as amostras (linhas) apenas dos passageiros do sexo feminino.
passageiros_fem <- Titanic_df[Titanic_df$Sex == "Female", ]
print(passageiros_fem)

# E2 – Quais os passageiros da terceira classe (3rd) que sobreviveram?
passageiros_sobreviventes <- Titanic_df[Titanic_df$Class == "3rd" & Titanic_df$Survived == "Yes", ]
print(passageiros_sobreviventes)

# E3 – Quantos passageiros adultos sobreviveram em cada classe (1st, 2nd, 3rd e Crew)?

count = 0
for(i in 1:nrow(Titanic_df)) {
  if(Titanic_df$Age[i] == "Adult" & Titanic_df$Survived[i] == "Yes")
    count = count + 1
}
print(paste("O número de sobreviventes adultos é: ", count))

# E4 – Quantos passageiros do sexo masculino adultos estavam a bordo em cada classe?
count_2 = 0
for(i in 1:nrow(Titanic_df)) {
  if(Titanic_df$Sex[i] == "Male" & Titanic_df$Age[i] == "Adult")
    count_2 = count_2 + 1
}
print(paste("O número de passageiros adultos do sexo masculino em cada classe é de", count_2))

# E5 – Quantos passageiros do sexo feminino adultos sobreviveram em cada classe?
count_3 = 0
for(i in 1:nrow(Titanic_df)) {
  if(Titanic_df$Sex[i] == "Female" & Titanic_df$Age[i] == "Adult")
    if(Titanic_df$Survived[i] == "Yes")
      count_3 = count_3 + 1
}
print(paste("O número de passageiros adultos do sexo feminino em cada classe é de", count_3))
