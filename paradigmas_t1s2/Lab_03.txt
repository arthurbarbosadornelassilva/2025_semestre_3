EXERCÍCIOS:

PLP-Lab-Lista 3

1 -)
#include <iostream>
#include <algorithm>
using namespace std; //considera que todos os nomes na biblioteca std são válidos sem a necessidade de usar std:: antes de cada comando

double vet1[10], vet2[10], vet3[10]; //não criei métodos para o cálculo das medidas de tendência central dos vet 2 & 3, mas o princípio é o mesmo do vet1
double calculoMedia() {
    double soma = 0;
    for (int n = 0; n < 10; n++) {
        soma += vet1[n];
    }
    return soma / 10;
}
double calculoMediana() {
    sort(vet1, vet1 + 10);
    return (vet1[4] + vet1[5]) / 2;
}
double calculoModa() {
    int maxCount = 0;
    double moda = vet1[0];

    for(int i = 0; i < 10; i++) {
        int count = 0;
        for(int j = i + 1; j < 10; j++) {
            if(vet1[i] == vet1[j]) {
                count++;
            }
            if(count > maxCount) {
                maxCount = count;
                moda = vet1[i];
            }
        }
    }
    return moda;
}

int main(void) {
    cout << "Digite 10 valores no vetor: \n";

    for (int n = 0; n < 10; n++) {
        cout << "Valor " << n << ": \n";
        cin >> vet1[n];
    }
    printf("\nVetor 1: \n");
    for (int n = 0; n < 10; n++) {
        cout << vet1[n] << endl;
    }
    printf("\nMedidas de tendência central do Vetor 1: \n");
    cout << "Média: " << calculoMedia() << endl;
    cout << "Mediana: " << calculoMediana() << endl;
    cout << "Moda: " << calculoModa() << endl;

    return 0;
}

2 -)
#include <iostream>
#include <algorithm>
using namespace std; //considera que todos os nomes na biblioteca std são válidos sem a necessidade de usar std:: antes de cada comando

int saque;
int para_entregar;
int opcoes[4] = {200, 50, 5, 1};

int main(void) {
    
    printf("CAIXA ELETRONICO\n\n");
    printf("Digite o valor desejado\n");
    scanf("%d", &saque);
    
    para_entregar = saque;
    
    for(int i = 0; i < 4; i++) {
        int count = 0;
        while (opcoes[i] <= saque){
            count++;
            saque -= opcoes[i];
            para_entregar = saque;
        }
        printf("%i Nota de %i reais\n Resta entregar %i reais\n\n", count, opcoes[i], para_entregar);
        // IDEIA QUE EU TIVE QUE FOI SUBSTITUÍDA PELO LOOP 'WHILE' ACIMA
        // else{ 
        //     i -= 1;
        // }
    }
    cout << "Falta " << para_entregar << " para entregar\n" << endl;

    return 0;
}

3 -)
#include <iostream>
#include <sstream>
#include <vector>
using namespace std; //considera que todos os nomes na biblioteca std são válidos sem a necessidade de usar std:: antes de cada comando

class NomeCompleto {
private:
    string nomeCompleto;
    string sobrenome;
    vector<string> iniciais;

public:
    void lerNome() {
        cout << "Digite o nome completo: ";
        getline(cin, nomeCompleto);
    }

    void processarNome() {
        stringstream ss(nomeCompleto);
        string palavra;
        vector<string> palavras;

        // Divide o nome completo em palavras
        while (ss >> palavra) {
            palavras.push_back(palavra);
        }

        // O último elemento é o sobrenome
        sobrenome = palavras.back();
        palavras.pop_back();

        // Os demais elementos são os nomes, dos quais extraímos as iniciais
        for (const string& nome : palavras) {
            iniciais.push_back(nome.substr(0, 1) + ".");
        }
    }

    void imprimirResultado() {
        cout << sobrenome << ", ";
        for (const string& inicial : iniciais) {
            cout << inicial << " ";
        }
        cout << endl;
    }
};

int main(void) {
    NomeCompleto nc;
    nc.lerNome();
    nc.processarNome();
    nc.imprimirResultado();

    return 0;
}

4 -)
