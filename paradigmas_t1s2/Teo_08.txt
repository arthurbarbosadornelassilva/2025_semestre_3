FUNÇÕES RECURSIVAS


Definição:
- Recursão é a possibilidade de uma função fazer uma chamada a ela mesma. A função chama explicitamente ela mesma passando os parâmetros necessários para a sua execução.

Características:
- A Funções recursivas têm uma implementação natural usando uma pilha de tempo de execução que registra o status de todas as chamadas ativas associando um registro de ativação a cada chamada
- Ao longo de cada chamada, os registros de ativação passam a guardar diferentes valores para o parâmetro n, já que cada chamada calcula um valor recursivo diferente
- Um compilador não pode determinar quantos registros de ativação simultâneos podem ser necessários para uma determinada função recursiva

Sobre a Pilha de Tempo de Execução:
- Cada chamada recursiva empilha um novo registro de ativação, e cada retorno desempilha esse registro de ativação quando retorna seu resultado para o solicitante

RESUMO SOBRE PILHA DE TEMPO DE EXECUÇÃO
Uma chamada de função em C (e normalmente em qualquer linguagem) usa um recurso do
S.O. (sistema operacional) chamado de pilha (em inglês, stack).
A pilha é usada para armazenar os endereços de retorno das funções bem como os seus
parâmetros.
A pilha de endereços funciona como uma pilha de papeis. Cada vez que uma nova função
é executada, o endereço de retorno (aquele no qual o programa deve retomar a
execução após a chamada) é guardado na pilha.
A função é então executada. Ao seu término, o endereço de retorno é retirado da pilha e
a execução continua a partir deste endereço.

Estouro de buffer (Buffer Overflow):
- Quando um programa tenta usar mais espaço do que o disponível na pilha de chamadas

Stack Overflow:
- Um estouro de pilha ocorre se o ponteiro de pilha de chamadas exceder o limite de pilha
- A pilha de chamadas pode consistir em uma quantidade limitada de espaço de endereçamento, geralmente determinado no início do programa
- Fatores que determinam o tamanho da pilha de chamadas:
    - Linguagem de Porgramação
    - Arquitetura de Máquina
    - Multithreading
    - Qunatidade de memória disponível
- A causa mais comum de estouro de pilha é a recursão excessivamente profunda ou infinita, cuja função continua a invocar a si mesma atpe que ocorra uma falha de segmentação (transbordamento)
- Alguns compiladores implementam otimização de chamada final, permitindo que uma recursão infinita não gere estouro de pilha
- A outra causa principal de um estouro de pilha resulta de uma tentativa de alocar mais memória na pilha do que caberia, por exemplo, criando variáveis de array locais que são muito grandes. Por esta razão, alguns autores recomendam que arrays maiores que alguns kilobytes sejam alocados dinamicamente em vez de como uma variável local

Alocação de Memória, Pilha de Execução e Recursividade
- Segmentos lógicos de um processo em execução
    - Text: contém o código do programa e suas constantes. Este segmento é alocado durante a criação do processo (''exec'') e permanece do mesmo tamanho durante toda a vida do processo.
    - Data: este segmento é a memória de trabalho do processo, aonde ficam alocadas as variáveis globais e estáticas. Tem tamanho fixo ao longo da execução do processo.
    - Stack: contém a pilha de execução, onde são armazenadas os parâmetros, endereços de retorno e variáveis locais de funções. Pode variar de tamanho durante a execução do processo.
    - Heap: contém blocos de memória alocadas dinamicamente, a pedido do processo, durante sua execução. Varia de tamanho durante a vida do processo.

- Tipos de alocação de memória suportados por C     -->     CHECAR OS DETALHES NO MATERIAL, ESSE ASSUNTO PODE CAIR NA PROVA!!!
    - Alocação estática: ocorre quando são declaradas variáveis globais ou estáticas; geralmente alocadas em Data.
    - A alocação automática ocorre quando são declaradas variáveis locais e parâmetros de
    funções. O espaço para a alocação dessas variáveis é reservado quando a função é invocada, e liberado quando a função termina. Geralmente é usada a pilha (stack).
    - A alocação dinâmica, quando o processo requisita explicitamente um bloco de memória para armazenar dados; o controle das áreas alocadas dinamicamente é manual ou semi-
    automático: o programador é responsável por liberar as áreas alocadas dinamicamente. A alocação dinâmica geralmente usa a área de heap

EXERCÍCIOS:

PLT - TEORIA - LISTA 8

1 -)
Elementos importantes sobre Funções & Recursividade:
Funções são elementos centrais das linguagens de Porgramação
- Sistema de Tipos do Clite: evita erros durante a chamada de funções
- Diferenças entre Sintaxe Abstrata e Concreta
- Registro de ativação e armazenamento na Pilha de Tempo de Execução
- Validade de Chamada de Função e Retorno

2 -)
A pilha de tempo de execução deve ser gerenciada de forma a evitar erros de 'stack overflow', causados pelo exceço de recursões de uma função, o quê gera um estouro na pilha de chamadas.
Essa tarefa é crítica porque erros de transbordamento de memória podem causar falhas em outros segmentos do código